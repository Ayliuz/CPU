in r1
in r2
in r3

push r1
push 0
ifeq lineal
pop
pop
call discr
pop r4
push r4 		; discr
push 0
ifeq one
ifl none
pop
sqrt
push 2			 ; roots
out
push r2
push -1
mul
pop r2
push r2 		; -b
add
push 2
push r1
mul
pop r1
push r1			;  2 * a 
div
out
push r2
push r4
sqrt
subtr
push r1
div
out
end



:lineal
pop
pop
push r2
push 0
ifeq none
pop
push r3
push -1
mul
push r2
div
push 1	
out
out
end

:none
push 0
out
end

:discr
push r2
push r2
mul
push r1
push r3
mul
push 4
mul
subtr
ret

:one
pop
push 1
out
push r2
push -1
mul
push 2
push r1
mul
div
out
end